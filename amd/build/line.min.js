/**
 * Library of classes for handling lines and points.
 *
 * These classes can represent Points and line, let you alter them
 * and can give you an SVG representation.
 *
 * @module     qtype_drawlines/line
 * @copyright  2024 The Open University
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("qtype_drawlines/line",(function(){function Point(x,y){this.x=x,this.y=y}function Line(labelstart,x1,y1,startRadius,labelend,x2,y2,endRadius,lineType){this.labelstart=labelstart,this.labelend=labelend,this.x1=x1,this.y1=y1,this.x2=x2,this.y2=y2,this.centre1=new Point(x1,y1),this.centre2=new Point(x2,y2),this.startRadius=startRadius,this.endRadius=endRadius,this.lineType=lineType}function createSvgElement(svg,tagName){var svgEl=svg.ownerDocument.createElementNS("http://www.w3.org/2000/svg",tagName);return svg.appendChild(svgEl),svgEl}return Point.prototype.toString=function(){return this.x+","+this.y},Point.prototype.move=function(dx,dy){this.x+=dx,this.y+=dy},Point.prototype.offset=function(offsetX,offsetY){return offsetX instanceof Point&&(offsetY=offsetX.y,offsetX=offsetX.x),new Point(this.x+offsetX,this.y+offsetY)},Point.parse=function(coordinates){var bits=coordinates.split(",");if(2!==bits.length)throw new Error(coordinates+" is not a valid point");return new Point(Math.round(bits[0]),Math.round(bits[1]))},Line.prototype=new Line,Line.prototype.getType=function(){return this.lineType},Line.prototype.getCoordinates=function(){return[this.centre1.x+","+this.centre1.y+";"+this.startRadius,this.centre2.x+","+this.centre2.y+";"+this.endRadius]},Line.prototype.makeSvg=function(svg){!function(svg){if(svg.getElementsByTagName("defs")[0])return;var svgdefsEl=svg.ownerDocument.createElementNS("http://www.w3.org/2000/svg","defs"),svgmarkerEl=svg.ownerDocument.createElementNS("http://www.w3.org/2000/svg","marker");svgmarkerEl.setAttribute("id","arrow"),svgmarkerEl.setAttribute("viewBox","0 0 10 10"),svgmarkerEl.setAttribute("refX","7"),svgmarkerEl.setAttribute("refY","5"),svgmarkerEl.setAttribute("markerWidth","4"),svgmarkerEl.setAttribute("markerHeight","4"),svgmarkerEl.setAttribute("orient","auto-start-reverse");var svgPathEl=svg.ownerDocument.createElementNS("http://www.w3.org/2000/svg","path");svgPathEl.setAttribute("d","M 0 0 L 10 5 L 0 10 z"),svgmarkerEl.appendChild(svgPathEl),svgdefsEl.appendChild(svgmarkerEl),svg.appendChild(svgdefsEl)}(svg);var svgEl=function(svg,tagName){var svgEl=createSvgElement(svg,"g"),lineEl=createSvgElement(svgEl,tagName);return lineEl.setAttribute("class","shape"),lineEl.setAttribute("tabindex","0"),createSvgElement(svgEl,"circle").setAttribute("class","startcircle shape"),createSvgElement(svgEl,"circle").setAttribute("class","endcircle shape"),createSvgElement(svgEl,"text").setAttribute("class","labelstart shapeLabel"),createSvgElement(svgEl,"text").setAttribute("class","labelend shapeLabel"),svgEl}(svg,"polyline");return this.updateSvg(svgEl),svgEl},Line.prototype.updateSvg=function(svgEl){this.drawLine(svgEl),svgEl.childNodes[1].setAttribute("cx",this.centre1.x),svgEl.childNodes[1].setAttribute("cy",this.centre1.y),svgEl.childNodes[1].setAttribute("r",Math.abs(this.startRadius)),svgEl.childNodes[2].setAttribute("cx",this.centre2.x),svgEl.childNodes[2].setAttribute("cy",this.centre2.y),svgEl.childNodes[2].setAttribute("r",Math.abs(this.endRadius)),svgEl.childNodes[3].textContent=this.labelstart,svgEl.childNodes[3].setAttribute("x",this.centre1.x),svgEl.childNodes[3].setAttribute("y",parseInt(this.centre1.y)+20),svgEl.childNodes[4].textContent=this.labelend,svgEl.childNodes[4].setAttribute("x",this.centre2.x),svgEl.childNodes[4].setAttribute("y",parseInt(this.centre2.y)+20);var svgClass=svgEl.getAttribute("class");svgClass&&svgClass.includes("placed")&&(svgEl.childNodes[1].setAttribute("tabindex","0"),svgEl.childNodes[2].setAttribute("tabindex","0"))},Line.prototype.drawLine=function(svgEl){svgEl.childNodes[0].style.stroke="#000973",svgEl.childNodes[0].style["stroke-width"]="3",svgEl.childNodes[0].style["stroke-dasharray"]="10,3";var points=this.centre1.x+","+this.centre1.y+" "+this.centre2.x+","+this.centre2.y;switch(svgEl.childNodes[0].setAttribute("points",points),this.lineType){case"linesinglearrow":svgEl.childNodes[0].style["marker-end"]="url(#arrow)",svgEl.childNodes[0].setAttribute("class","shape singlearrow");break;case"linedoublearrows":svgEl.childNodes[0].style["marker-start"]="url(#arrow)",svgEl.childNodes[0].style["marker-end"]="url(#arrow)",svgEl.childNodes[0].setAttribute("class","shape doublearrows");break;case"lineinfinite":var newCoordinates=this.drawInfiniteLine(svgEl.parentNode),infiniteLine=newCoordinates[0]+","+newCoordinates[1]+" "+points+" "+newCoordinates[2]+","+newCoordinates[3];svgEl.childNodes[0].setAttribute("points",infiniteLine),svgEl.childNodes[0].setAttribute("class","shape infinite")}},Line.prototype.drawInfiniteLine=function(svg){const width=svg.width.baseVal.value,height=svg.height.baseVal.value,dx=this.centre2.x-this.centre1.x,dy=this.centre2.y-this.centre1.y;let xMin,yMin,xMax,yMax;if(0===dx)xMin=xMax=this.centre1.x,yMin=0,yMax=height;else if(0===dy)xMin=0,xMax=width,yMin=yMax=this.centre1.y;else{const slope=dy/dx,intercept=this.centre1.y-slope*this.centre1.x;xMin=-width,yMin=slope*xMin+intercept,xMax=2*width,yMax=slope*xMax+intercept,yMin<0?(yMin=0,xMin=(yMin-intercept)/slope):yMin>height&&(yMin=height,xMin=(yMin-intercept)/slope),yMax<0?(yMax=0,xMax=(yMax-intercept)/slope):yMax>height&&(yMax=height,xMax=(yMax-intercept)/slope)}return[Math.round(xMin),Math.round(yMin),Math.round(xMax),Math.round(yMax)]},Line.prototype.parse=function(startcoordinates,endcoordinates,ratio){var startcoordinatesbits=startcoordinates.split(";"),endcoordinatesbits=endcoordinates.split(";");return this.centre1=Point.parse(startcoordinatesbits[0]),this.centre2=Point.parse(endcoordinatesbits[0]),this.centre1.x=this.centre1.x*parseFloat(ratio),this.centre1.y=this.centre1.y*parseFloat(ratio),this.x1=this.centre1.x*parseFloat(ratio),this.y1=this.centre1.y*parseFloat(ratio),this.x2=this.centre2.x*parseFloat(ratio),this.y2=this.centre2.y*parseFloat(ratio),this.centre2.x=this.centre2.x*parseFloat(ratio),this.centre2.y=this.centre2.y*parseFloat(ratio),this.startRadius=Math.round(startcoordinatesbits[1])*parseFloat(ratio),this.endRadius=Math.round(endcoordinatesbits[1])*parseFloat(ratio),!0},Line.prototype.move=function(whichHandle,dx,dy,maxX,maxY){"startcircle"===whichHandle?(this.centre1.move(dx,dy),this.centre1.x<this.startRadius&&(this.centre1.x=this.startRadius,this.x1=this.startRadius),this.centre1.x>maxX-this.startRadius&&(this.centre1.x=maxX-this.startRadius,this.x1=maxX-this.startRadius),this.centre1.y<this.endRadius&&(this.centre1.y=this.endRadius,this.y1=this.endRadius),this.centre1.y>maxY-this.endRadius&&(this.centre1.y=maxY-this.endRadius,this.y1=maxY-this.endRadius)):(this.centre2.move(dx,dy),this.centre2.x<this.startRadius&&(this.centre2.x=this.startRadius,this.x2=this.startRadius),this.centre2.x>maxX-this.startRadius&&(this.centre2.x=maxX-this.startRadius,this.x2=maxX-this.startRadius),this.centre2.y<this.endRadius&&(this.centre2.y=this.endRadius,this.y2=this.endRadius),this.centre2.y>maxY-this.endRadius&&(this.centre2.y=maxY-this.endRadius,this.y2=maxY-this.endRadius))},Line.prototype.moveDrags=function(dx,dy,maxX,maxY,whichSVG){"DragsSVG"===whichSVG?(this.centre1.move(0,dy),this.centre2.move(0,dy),this.centre1.x=50,this.x1=50,this.centre2.x=200,this.x2=200):(this.centre1.move(dx,dy),this.centre2.move(dx,dy),this.centre1.x<this.startRadius&&(this.centre1.x=this.startRadius,this.x1=this.startRadius),this.centre1.x>maxX-this.startRadius&&(this.centre1.x=maxX-this.startRadius,this.x1=maxX-this.startRadius),this.centre2.x<this.startRadius&&(this.centre2.x=this.startRadius,this.x2=this.startRadius),this.centre2.x>maxX-this.startRadius&&(this.centre2.x=maxX-this.startRadius,this.x2=maxX-this.startRadius)),this.centre1.y<this.endRadius&&(this.centre1.y=this.endRadius,this.y1=this.endRadius),this.centre1.y>maxY-this.endRadius&&(this.centre1.y=maxY-this.endRadius,this.y1=maxY-this.endRadius),this.centre2.y<this.endRadius&&(this.centre2.y=this.endRadius,this.y2=this.endRadius),this.centre2.y>maxY-this.endRadius&&(this.centre2.y=maxY-this.endRadius,this.y2=maxY-this.endRadius)},Line.prototype.addToDropZone=function(eventType,selectedElement,svgDropZones,svgDragsHome,dropX,dropY,whichSVG){var maxY=0,dropzoneNo=selectedElement.getAttribute("data-dropzone-no"),classattributes="";return("mouse"===eventType?this.isInsideSVG(svgDragsHome,dropX,dropY):"DragsSVG"===whichSVG)?(maxY=svgDropZones.height.baseVal.value,svgDropZones.appendChild(selectedElement),selectedElement.getAttribute("data-dropzone-no"),selectedElement.childNodes[1].setAttribute("tabindex","0"),selectedElement.childNodes[2].setAttribute("tabindex","0"),this.centre1.y=maxY-2*this.startRadius,this.y1=maxY-2*this.startRadius,this.centre2.y=maxY-2*this.endRadius,this.y2=maxY-2*this.endRadius,classattributes=(classattributes=selectedElement.getAttribute("class")).replace("inactive","placed"),selectedElement.setAttribute("class",classattributes)):(svgDragsHome.appendChild(selectedElement),this.centre1.x=50,this.centre1.y=this.startRadius+50*dropzoneNo,this.y1=this.startRadius+50*dropzoneNo,this.centre2.x=200,this.centre2.y=this.endRadius+50*dropzoneNo,this.y2=this.endRadius+50*dropzoneNo,classattributes=(classattributes=selectedElement.getAttribute("class")).replace("placed","inactive"),selectedElement.setAttribute("class",classattributes),selectedElement.childNodes[1].setAttribute("tabindex","-1"),selectedElement.childNodes[2].setAttribute("tabindex","-1")),""},Line.prototype.isInsideSVG=function(svg,dropX,dropY){const rect=svg.getBoundingClientRect();return dropX>=rect.left&&dropX<=rect.right&&dropY>=rect.top&&dropY<=rect.bottom},Line.prototype.edit=function(handleIndex,dx,dy,maxX,maxY){var limit=0;"0"===handleIndex?(this.startRadius+=dx,limit=Math.min(this.centre1.x,this.centre1.y,maxX-this.centre1.x,maxY-this.centre1.y),this.startRadius>limit&&(this.startRadius=limit),this.startRadius<-limit&&(this.startRadius=-limit)):(this.endRadius+=dx,limit=Math.min(this.centre2.x,this.centre2.y,maxX-this.centre2.x,maxY-this.centre2.y),this.endRadius>limit&&(this.endRadius=limit),this.endRadius<-limit&&(this.endRadius=-limit))},Line.prototype.getHandlePositions=function(){return{moveHandles:[new Point(this.centre1.x,this.centre1.y),new Point(this.centre2.x,this.centre2.y)],editHandles:[this.centre1.offset(this.startRadius,0),this.centre2.offset(this.endRadius,0)]}},Line.prototype.normalizeShape=function(){this.startRadius=Math.abs(this.startRadius),this.endRadius=Math.abs(this.endRadius)},{Point:Point,Line:Line,createSvgElement:createSvgElement,make:function(linecoordinates,labels,lineType){var startcoordinates=linecoordinates[0].split(";"),endcoordinates=linecoordinates[1].split(";"),linestartbits=startcoordinates[0].split(","),lineendbits=endcoordinates[0].split(",");return new Line(labels[0],linestartbits[0],linestartbits[1],startcoordinates[1],labels[1],lineendbits[0],lineendbits[1],endcoordinates[1],lineType)},getSimilar:function(lineType,line){return new Line(line.labelstart,parseInt(line.x1),parseInt(line.y1),parseInt(line.startRadius),line.labelend,parseInt(line.x2),parseInt(line.y2),parseInt(line.endRadius),lineType)}}}));

//# sourceMappingURL=line.min.js.map